{"version":3,"sources":["theme.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","secondary","styles","appBar","backgroundColor","contactButtonRoot","borderWidth","borderColor","color","padding","menuButton","display","button","margin","spacing","buttonRoot","buttonLabel","textTransform","grow","flexGrow","marginRight","marginLeft","maxWidth","App","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","width","url","window","location","href","react_default","a","createElement","style","background","AppBar","position","className","isWidthUp","Toolbar","src","maxHeight","Button","root","label","IconButton","onClick","Menu_default","Drawer","onClose","anchor","List","ListItem","target","Typography","variant","marginTop","fontFamily","fontWeight","Component","withWidth","withStyles","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0053274.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = {\n  palette: {\n    primary: {\n      light: \"white\",\n      main: \"#66FCF1\",\n      dark: \"#45A29E\",\n    },\n    secondary: {\n      light: \"#C5C6C7\",\n      main: \"#1F2833\",\n      dark: \"#0B0C10\"\n    }\n  }\n};\n\nconst theme = createMuiTheme(defaultTheme)\n\nexport default theme\n\n","import React, {\n  Component\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport theme from './theme.js'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport withWidth, {\n  isWidthUp\n} from \"@material-ui/core/withWidth\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst styles = {\n  appBar: {\n    backgroundColor: theme.palette.secondary.dark\n  },\n  contactButtonRoot: {\n    borderWidth: 2,\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n    padding: \"15px 30px\",\n  },\n  menuButton: {\n    display: 'flex',\n    color: theme.palette.secondary.light\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  buttonRoot: {\n    color: theme.palette.secondary.light\n  },\n  buttonLabel: {\n    textTransform: 'capitalize',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  main: {\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 1200,\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    open: false\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n\n    const {\n      classes,\n      width\n    } = this.props;\n    const url = window.location.href;\n\n    const renderDesktopAppBar = {\n\n    }\n\n    const renderMobileAppBar = {\n\n    }\n\n    return (\n      <div style={{ background: theme.palette.secondary.dark }}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          {isWidthUp(\"sm\", width) ? (\n            <Toolbar>\n              <img src={\n                url == \"http://localhost:3000/\"\n                  ? \"/images/logo.png\"\n                  : \"https://weinianlim.github.io/wcc2/images/logo.png\"\n              }\n                style={{\n                  width: \"auto\",\n                  maxHeight: \"45px\"\n                }} />\n              <div className={classes.grow}></div>\n              <Button\n                className={classes.button}\n                classes={{\n                  root: classes.buttonRoot,\n                  label: classes.buttonLabel\n                }}\n              >\n                About\n              </Button>\n              <Button\n                className={classes.button}\n                classes={{\n                  root: classes.buttonRoot,\n                  label: classes.buttonLabel\n                }}\n              >\n                Experience\n              </Button>\n              <Button\n                className={classes.button}\n                classes={{\n                  root: classes.buttonRoot,\n                  label: classes.buttonLabel\n                }}\n              >\n                Work\n              </Button>\n              <Button\n                className={classes.button}\n                classes={{\n                  root: classes.buttonRoot,\n                  label: classes.buttonLabel\n                }}\n              >\n                Contact\n              </Button>\n              <Button\n                className={classes.button}\n                classes={{\n                  root: classes.buttonRoot,\n                  label: classes.buttonLabel\n                }}\n              >\n                Resume\n              </Button>\n            </Toolbar>\n          ) : (\n              <Toolbar>\n                <img src={\n                  url == \"http://localhost:3000/\"\n                    ? \"/images/logo.png\"\n                    : \"https://weinianlim.github.io/wcc2/images/logo.png\"\n                }\n                  style={{\n                    width: \"auto\",\n                    maxHeight: \"45px\"\n                  }} />\n                <div className={classes.grow}></div>\n                <IconButton className={classes.menuButton} onClick={this.handleDrawerOpen}>\n                  <MenuIcon />\n                </IconButton>\n              </Toolbar>\n            )}\n        </AppBar>\n        <Drawer open={this.state.open} onClose={this.handleDrawerClose} anchor='right'>\n          <List>\n            <ListItem>About</ListItem>\n            <ListItem>Experience</ListItem>\n            <ListItem>Work</ListItem>\n            <ListItem>Contact</ListItem>\n            <ListItem>\n              <a\n                href={\n                  url == \"http://localhost:3000/\"\n                    ? \"/images/resume.pdf\"\n                    : \"https://weinianlim.github.io/wcc2/images/resume.pdf\"\n                }\n                target=\"_blank\"\n              >\n                Resume\n              </a>\n            </ListItem>\n          </List>\n        </Drawer>\n        <main className={classes.main}>\n        <section>\n          <Typography variant=\"h1\" style={{ marginTop: \"100px\", fontFamily: \"Roboto\", fontWeight: \"500\", color: theme.palette.primary.main }}>\n            William Lim\n          </Typography>\n          <Typography variant=\"h1\" style={{ marginTop: \"10px\", fontFamily: \"Roboto\", fontWeight: \"450\", color: theme.palette.secondary.light }}>\n            I build Web Application\n          </Typography>\n          <Typography variant=\"h6\" style={{ marginTop: \"50px\", fontFamily: \"Roboto\", fontWeight: \"400\", color: theme.palette.secondary.light }}>\n            I am a software engineer based in Vancouver, BC specializing in <br /> building exceptional, responsive and high quality <br /> Websites and Web Applications\n          </Typography>\n          <Button \n            variant=\"outlined\" \n            className={classes.button} \n            classes={{\n              root: classes.contactButtonRoot,\n              label: classes.buttonLabel\n            }}\n            color=\"theme.palette.primary.main\"\n            style={{marginTop: \"50px\", marginLeft: \"0px\"}}\n          >\n            Let's talk\n          </Button>\n          </section>\n          <section style={{marginTop: \"200px\"}}>\n          <Typography variant=\"h4\" style={{ marginTop: \"10px\", fontFamily: \"Roboto\", fontWeight: \"500\", color: theme.palette.secondary.light }}>\n            About Me\n          </Typography>\n          </section>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withWidth()(withStyles(styles)(App))\n\n\n{\n  /* <AppBar position=\"static\" style={{ backgroundColor: theme.palette.primary.dark}}>\n            <Toolbar>\n              <img\n                src={\n                  url == \"http://localhost:3000/\"\n                    ? \"/images/logo.png\"\n                    : \"https://weinianlim.github.io/wcc2/images/logo.png\"\n                }\n                style={{\n                  width: \"auto\",\n                  maxHeight: \"45px\"\n                }}\n              />\n              <IconButton onClick={this.handleDrawerOpen}>\n                <MenuIcon style={{ color: \"white\" }} />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer open={this.state.open} onClose={this.handleDrawerClose}>\n            <List>\n              <ListItem>\n                <a\n                  href={\n                    url == \"http://localhost:3000/\"\n                      ? \"/images/resume.pdf\"\n                      : \"https://weinianlim.github.io/wcc2/images/resume.pdf\"\n                  }\n                  target=\"_blank\"\n                  className={classes.resumeInDrawer}\n                >\n                  Resume\n                </a>\n              </ListItem>\n            </List>\n          </Drawer> */\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}